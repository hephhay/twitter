openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /Notification/:
    get:
      operationId: Notification_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Notification
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /Notification/{id}/:
    get:
      operationId: Notification_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - Notification
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /auth/users/:
    get:
      operationId: auth_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /auth/users/{username}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /groups/:
    get:
      operationId: groups_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groups_create
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /groups/{id}/:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groups_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groups_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroupRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groups_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /messages/:
    get:
      operationId: messages_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - messages
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
  /messages/{id}/:
    get:
      operationId: messages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this message.
        required: true
      tags:
      - messages
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /tweet/:
    get:
      operationId: tweet_list
      parameters:
      - in: query
        name: content
        schema:
          type: string
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date
      - in: query
        name: created_by
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: rem_reply
        schema:
          type: boolean
      - in: query
        name: rem_retweet
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_at_after
        schema:
          type: string
          format: date
      - in: query
        name: updated_at_before
        schema:
          type: string
          format: date
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTweetSerilizerList'
          description: ''
    post:
      operationId: tweet_create
      tags:
      - tweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
  /tweet/{id}/:
    get:
      operationId: tweet_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
    put:
      operationId: tweet_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
    patch:
      operationId: tweet_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTweetSerilizerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTweetSerilizerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTweetSerilizerRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
    delete:
      operationId: tweet_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /tweet/{id}/like_tweet/:
    post:
      operationId: tweet_like_tweet_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/General'
          description: ''
    delete:
      operationId: tweet_like_tweet_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /tweet/{id}/likes/:
    get:
      operationId: tweet_likes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /tweet/{id}/replies/:
    get:
      operationId: tweet_replies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
  /tweet/{id}/reply_tweet/:
    post:
      operationId: tweet_reply_tweet_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
  /tweet/{id}/retweet/:
    post:
      operationId: tweet_retweet_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TweetSerilizerRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
  /tweet/{id}/retweets/:
    get:
      operationId: tweet_retweets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tweet.
        required: true
      tags:
      - tweet
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSerilizer'
          description: ''
  /tweet_media/:
    get:
      operationId: tweet_media_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tweet_media
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTweetMediaSerilizerList'
          description: ''
    post:
      operationId: tweet_media_create
      tags:
      - tweet_media
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetMediaSerilizer'
          description: ''
  /tweet_media/{file}/:
    get:
      operationId: tweet_media_retrieve
      parameters:
      - in: path
        name: file
        schema:
          type: string
          format: uri
          title: Tweet media file
        required: true
      tags:
      - tweet_media
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetMediaSerilizer'
          description: ''
    delete:
      operationId: tweet_media_destroy
      parameters:
      - in: path
        name: file
        schema:
          type: string
          format: uri
          title: Tweet media file
        required: true
      tags:
      - tweet_media
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      parameters:
      - in: query
        name: location__icontains
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{username}/follow/:
    post:
      operationId: users_follow_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/General'
          description: ''
    delete:
      operationId: users_follow_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/{username}/followers/:
    get:
      operationId: users_followers_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{username}/following/:
    get:
      operationId: users_following_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    General:
      type: object
      properties:
        message:
          type: string
          readOnly: true
      required:
      - message
    Group:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        group_name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Group Description
          maxLength: 256
        is_group:
          type: boolean
        created_by:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - created_by
      - group_name
      - id
      - updated_at
    GroupRequest:
      type: object
      properties:
        group_name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Group Description
          maxLength: 256
        is_group:
          type: boolean
      required:
      - group_name
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        body:
          type: string
        is_document:
          type: boolean
        group:
          type: string
          format: uuid
          readOnly: true
      required:
      - body
      - created_at
      - group
      - id
      - sender
      - updated_at
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tweet:
          allOf:
          - $ref: '#/components/schemas/TweetSerilizer'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        body:
          type: string
        seen:
          type: boolean
        model:
          type: string
          title: Model Type
          maxLength: 50
        model_id:
          type: string
          format: uri
          maxLength: 200
      required:
      - body
      - created_at
      - id
      - model
      - model_id
      - tweet
      - updated_at
      - user
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedMessageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedTweetMediaSerilizerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TweetMediaSerilizer'
    PaginatedTweetSerilizerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TweetSerilizer'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedGroupRequest:
      type: object
      properties:
        group_name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
          title: Group Description
          maxLength: 256
        is_group:
          type: boolean
    PatchedTweetSerilizerRequest:
      type: object
      properties:
        content:
          type: string
          nullable: true
          minLength: 1
          title: Content or quote
    PatchedUserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        bio:
          type: string
          nullable: true
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        avatar:
          type: string
          format: binary
          nullable: true
          title: Profile pictire
        location:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        birth_date:
          type: string
          format: date
          title: Birthday
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetPasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - current_password
      - new_email
    SetUsernameRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
    TweetMediaSerilizer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
          readOnly: true
          title: Tweet media file
        created_at:
          type: string
          format: date-time
          readOnly: true
        tweet:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - file
      - id
      - tweet
    TweetSerilizer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        num_reply:
          type: integer
          readOnly: true
        num_retweet:
          type: integer
          readOnly: true
        num_likes:
          type: integer
          readOnly: true
        media:
          type: array
          items:
            $ref: '#/components/schemas/TweetMediaSerilizer'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        content:
          type: string
          nullable: true
          title: Content or quote
        tags:
          type: array
          items:
            type: string
            title: Hash tags or usernames
            maxLength: 200
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - media
      - num_likes
      - num_reply
      - num_retweet
      - tags
      - updated_at
    TweetSerilizerRequest:
      type: object
      properties:
        content:
          type: string
          nullable: true
          minLength: 1
          title: Content or quote
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        num_followers:
          type: integer
          readOnly: true
        num_following:
          type: integer
          readOnly: true
        follows_you:
          type: boolean
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        bio:
          type: string
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          format: uri
          nullable: true
          title: Profile pictire
        location:
          type: string
          nullable: true
          maxLength: 100
        birth_date:
          type: string
          format: date
          title: Birthday
        is_verified:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - birth_date
      - created_at
      - date_joined
      - email
      - first_name
      - follows_you
      - id
      - is_active
      - is_staff
      - is_superuser
      - is_verified
      - last_login
      - last_name
      - num_followers
      - num_following
      - updated_at
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        birth_date:
          type: string
          format: date
          title: Birthday
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
          title: Profile pictire
      required:
      - birth_date
      - email
      - first_name
      - last_name
      - username
    UserCreateRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        birth_date:
          type: string
          format: date
          title: Birthday
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        avatar:
          type: string
          format: binary
          nullable: true
          title: Profile pictire
      required:
      - birth_date
      - email
      - first_name
      - last_name
      - password
      - username
    UserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        bio:
          type: string
          nullable: true
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        avatar:
          type: string
          format: binary
          nullable: true
          title: Profile pictire
        location:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        birth_date:
          type: string
          format: date
          title: Birthday
      required:
      - birth_date
      - first_name
      - last_name
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - new_email
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
      required:
      - new_email
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
